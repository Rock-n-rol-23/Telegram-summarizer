"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""

import logging
import sqlite3
from typing import Optional, Dict
from .base import BaseHandler
from bot.constants import WELCOME_MESSAGE_HTML

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞—É–¥–∏–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏
try:
    from bot.ui_settings import (
        get_settings_manager,
        generate_settings_keyboard,
        format_settings_message
    )
    ENHANCED_AUDIO_AVAILABLE = True
except ImportError:
    ENHANCED_AUDIO_AVAILABLE = False

logger = logging.getLogger(__name__)


class CommandHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""

    def __init__(self, session, base_url, db, state_manager, user_settings: Dict, user_states: Dict, user_messages_buffer: Dict):
        super().__init__(session, base_url, db, state_manager)
        self.user_settings = user_settings
        self.user_states = user_states
        self.user_messages_buffer = user_messages_buffer

    async def handle_start(self, update: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
        chat_id = update["message"]["chat"]["id"]
        user = update["message"]["from"]

        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.get('id')} –≤ —á–∞—Ç–µ {chat_id}")

        # –û—á–∏—â–∞–µ–º –ª—é–±—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        await self.clear_custom_keyboards(chat_id)

        await self.send_message(chat_id, WELCOME_MESSAGE_HTML, parse_mode="HTML")

    async def handle_help(self, update: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
        chat_id = update["message"]["chat"]["id"]

        help_text = (
            "üìñ **–ü–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞**\n\n"
            "üéØ **–ö–ê–ö –ü–û–õ–¨–ó–û–í–ê–¢–¨–°–Ø:**\n"
            "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç, —Å—Å—ã–ª–∫—É, –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ –∞—É–¥–∏–æ ‚Äî —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–±–µ—Ä—É –ª—É—á—à–∏–π —Ñ–æ—Ä–º–∞—Ç —Å–∞–º–º–∞—Ä–∏!\n\n"
            "üìù **–ß–¢–û –Ø –£–ú–ï–Æ:**\n"
            "‚Ä¢ –¢–µ–∫—Å—Ç—ã –∏ —Å—Ç–∞—Ç—å–∏ ‚Äî –≤—ã–∂–∏–º–∫–∞ —Å —Ñ–∞–∫—Ç–∞–º–∏\n"
            "‚Ä¢ –í–µ–±-—Å—Å—ã–ª–∫–∏ ‚Äî –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–µ —Ä–µ–∑—é–º–µ\n"
            "‚Ä¢ PDF, DOCX, TXT ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–∞–º–º–∞—Ä–∏\n"
            "‚Ä¢ –ö–Ω–∏–≥–∏ (EPUB, FB2) ‚Äî —Å—é–∂–µ—Ç –∏ –∏–¥–µ–∏\n"
            "‚Ä¢ YouTube (–¥–æ 2 —á–∞—Å–æ–≤) ‚Äî —Ä–µ–∑—é–º–µ –ø–æ —Å—É–±—Ç–∏—Ç—Ä–∞–º\n"
            "‚Ä¢ –ê—É–¥–∏–æ/–≥–æ–ª–æ—Å–æ–≤—ã–µ ‚Äî —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è + —Å–∞–º–º–∞—Ä–∏\n\n"
            "üéõ **–£–ü–†–ê–í–õ–ï–ù–ò–ï –î–ï–¢–ê–õ–¨–ù–û–°–¢–¨–Æ:**\n"
            "‚Ä¢ <code>/short</code> ‚Äî –∫—Ä–∞—Ç–∫–æ (2-3 –≥–ª–∞–≤–Ω—ã–µ –º—ã—Å–ª–∏)\n"
            "‚Ä¢ <code>/balanced</code> ‚Äî —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è) ‚ú®\n"
            "‚Ä¢ <code>/detailed</code> ‚Äî –ø–æ–¥—Ä–æ–±–Ω–æ (–≤—Å—ë –≤–∞–∂–Ω–æ–µ)\n\n"
            "üìä **–î–†–£–ì–ò–ï –ö–û–ú–ê–ù–î–´:**\n"
            "‚Ä¢ <code>/stats</code> ‚Äî —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            "‚Ä¢ <code>/help</code> ‚Äî —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
            "‚Ä¢ <code>/start</code> ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n\n"
            "üí° **–õ–ò–ú–ò–¢–´:**\n"
            "‚Ä¢ 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É\n"
            "‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã –¥–æ 20MB\n"
            "‚Ä¢ –ê—É–¥–∏–æ –¥–æ 50MB (~1 —á–∞—Å)\n\n"
            "üî• **Powered by Llama 3.3 70B + Whisper large v3**\n\n"
            "üí¨ –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ü—Ä–æ—Å—Ç–æ –Ω–∞—á–Ω–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç!"
        )

        await self.send_message(chat_id, help_text)

    async def handle_audio_settings(self, update: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É–¥–∏–æ"""
        if not ENHANCED_AUDIO_AVAILABLE:
            await self.send_message(
                update["message"]["chat"]["id"],
                "‚ùå –£–ª—É—á—à–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É–¥–∏–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –æ–±–Ω–æ–≤–∏—Ç–µ –±–æ—Ç–∞"
            )
            return

        chat_id = update["message"]["chat"]["id"]
        user_id = update["message"]["from"]["id"]

        try:
            settings_manager = get_settings_manager()
            if settings_manager:
                user_settings = settings_manager.get_user_settings(user_id)
                message_text = format_settings_message(user_settings)
                keyboard = generate_settings_keyboard()

                await self.send_message(chat_id, message_text, reply_markup=keyboard)
            else:
                await self.send_message(chat_id, "‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É–¥–∏–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            await self.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")

    async def handle_smart_mode(self, update: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /smart - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º —É–º–Ω–æ–π —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
        chat_id = update["message"]["chat"]["id"]
        user_id = update["message"]["from"]["id"]

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º StateManager –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è smart_mode
        state = self.state_manager.get_state(user_id)
        state.smart_mode = not state.smart_mode
        new_mode = state.smart_mode

        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å legacy —Å–ª–æ–≤–∞—Ä–µ–º (–≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        if user_id not in self.user_settings:
            self.user_settings[user_id] = {}
        self.user_settings[user_id]["smart_mode"] = new_mode

        if new_mode:
            mode_text = ("üß† **–£–º–Ω–∞—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞!**\n\n"
                        "–¢–µ–ø–µ—Ä—å –±–æ—Ç —Å–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∑—é–º–µ —Å –∫–ª—é—á–µ–≤—ã–º–∏ –∏–Ω—Å–∞–π—Ç–∞–º–∏:\n\n"
                        "üéØ **–ß—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ:**\n"
                        "‚Ä¢ –¢–æ–ª—å–∫–æ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –≤—ã–≤–æ–¥—ã –∏ –∏–Ω—Å–∞–π—Ç—ã\n"
                        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
                        "‚Ä¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n\n"
                        "üìä **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å—é:**\n"
                        "‚Ä¢ /10 ‚Üí 2 –∫–ª—é—á–µ–≤—ã—Ö –∏–Ω—Å–∞–π—Ç–∞ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å–∂–∞—Ç–∏–µ)\n"
                        "‚Ä¢ /30 ‚Üí 3 –∫–ª—é—á–µ–≤—ã—Ö –∏–Ω—Å–∞–π—Ç–∞ (—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ)\n"
                        "‚Ä¢ /50 ‚Üí 4 –∫–ª—é—á–µ–≤—ã—Ö –∏–Ω—Å–∞–π—Ç–∞ (–ø–æ–¥—Ä–æ–±–Ω–æ)\n\n"
                        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –¥–æ–∫—É–º–µ–Ω—Ç, –∞—É–¥–∏–æ –∏–ª–∏ —Å—Å—ã–ª–∫—É –¥–ª—è —É–º–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏!\n\n"
                        "_–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–±—ã—á–Ω–æ–π —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏, —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏—Ç–µ /smart_")
        else:
            mode_text = ("üìù **–û–±—ã—á–Ω–∞—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞**\n\n"
                        "–¢–µ–ø–µ—Ä—å –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ —Å–∂–∞—Ç–∏—è (10%, 30%, 50%).\n\n"
                        "–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å —É–º–Ω—É—é —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—é, –Ω–∞–∂–º–∏—Ç–µ /smart")

        await self.send_message(chat_id, mode_text)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} {'–≤–∫–ª—é—á–∏–ª' if new_mode else '–æ—Ç–∫–ª—é—á–∏–ª'} —É–º–Ω—É—é —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—é")

    async def handle_stats(self, update: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /stats"""
        chat_id = update["message"]["chat"]["id"]
        user_id = update["message"]["from"]["id"]

        try:
            user_stats = self.db.get_user_stats(user_id)
        except (sqlite3.Error, ValueError) as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            user_stats = {
                'total_requests': 0,
                'total_chars': 0,
                'total_summary_chars': 0,
                'avg_compression': 0,
                'first_request': None
            }

        stats_text = (
            f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
            f"‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤: {user_stats['total_requests']}\n"
            f"‚Ä¢ –°–∏–º–≤–æ–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {user_stats['total_chars']:,}\n"
            f"‚Ä¢ –°–∏–º–≤–æ–ª–æ–≤ –≤ —Å–∞–º–º–∞—Ä–∏: {user_stats['total_summary_chars']:,}\n"
            f"‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ —Å–∂–∞—Ç–∏–µ: {user_stats['avg_compression']:.1%}\n"
            f"‚Ä¢ –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å: {user_stats['first_request'] or '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\n\n"
            f"üìà –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª–∏–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ –∏ —Å—Ç–∞—Ç–µ–π!"
        )

        await self.send_message(chat_id, stats_text)

    async def handle_compression(self, update: dict, compression_level: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ —É—Ä–æ–≤–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–∞–º–º–∞—Ä–∏"""
        chat_id = update["message"]["chat"]["id"]
        user_id = update["message"]["from"]["id"]

        try:
            # –ü–æ–ª—É—á–∞–µ–º username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            username = update["message"]["from"].get("username", "")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            self.update_user_compression_level(user_id, compression_level, username)

            # –ü–æ–Ω—è—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω–µ–π
            level_names = {
                10: "üî• –ö—Ä–∞—Ç–∫–æ",
                30: "üìä –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ",
                60: "üìñ –ü–æ–¥—Ä–æ–±–Ω–æ"
            }
            level_name = level_names.get(compression_level, f"{compression_level}%")

            confirmation_text = (
                f"‚úÖ –°—Ç–∏–ª—å —Å–∞–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑–º–µ–Ω—ë–Ω: {level_name}\n\n"
                f"–¢–µ–ø–µ—Ä—å —Ç–≤–æ–∏ —Ç–µ–∫—Å—Ç—ã –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –≤ —Å—Ç–∏–ª–µ \"{level_name}\".\n\n"
                f"üìù –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç, —Å—Ç–∞—Ç—å—é –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç!"
            )

            await self.send_message(chat_id, confirmation_text)
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∏–∑–º–µ–Ω–∏–ª —É—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è –Ω–∞ {compression_level}%")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã —Å–∂–∞—Ç–∏—è {compression_level}% –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            await self.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

    async def handle_direct_compression(self, update: dict, compression_level: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä—è–º—ã—Ö –∫–æ–º–∞–Ω–¥ —Å–∂–∞—Ç–∏—è /10, /30, /50"""
        chat_id = update["message"]["chat"]["id"]
        user_id = update["message"]["from"]["id"]

        logger.info(f"üöÄ DIRECT COMPRESSION: –ö–æ–º–∞–Ω–¥–∞ /{compression_level} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.user_states[user_id] = {"step": "format_selection"}
        self.user_settings[user_id] = {"compression": compression_level if compression_level else 30}
        self.user_messages_buffer[user_id] = []

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å—Ä–∞–∑—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        self.user_states[user_id]["step"] = "waiting_text"
        self.user_settings[user_id]["format"] = "bullets"  # –í—Å–µ–≥–¥–∞ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫

        await self.send_text_request(chat_id, user_id)

    # ============ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã ============

    async def send_text_request(self, chat_id: int, user_id: int):
        """–ó–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
        settings = self.user_settings[user_id]
        compression_text = {"10": "10%", "30": "30%", "50": "50%"}[settings["compression"]]
        format_text = {
            "bullets": "–º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫",
            "paragraph": "—Å–≤—è–∑–Ω—ã–π –∞–±–∑–∞—Ü",
            "keywords": "–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞"
        }[settings["format"]]

        text = f"""‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã:
‚Ä¢ –°–∂–∞—Ç–∏–µ: {compression_text}
‚Ä¢ –§–æ—Ä–º–∞—Ç: {format_text}

üìù –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –ª—é–±—ã–º —Å–ø–æ—Å–æ–±–æ–º:

1Ô∏è‚É£ –ù–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –ø—Ä—è–º–æ –≤ —á–∞—Ç
2Ô∏è‚É£ –ü–µ—Ä–µ—à–ª–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π
3Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥ - —è –∏—Ö –æ–±—ä–µ–¥–∏–Ω—é

–ú–∏–Ω–∏–º—É–º: 100 —Å–∏–º–≤–æ–ª–æ–≤
–ú–∞–∫—Å–∏–º—É–º: 10,000 —Å–∏–º–≤–æ–ª–æ–≤

üí° –î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start"""

        await self.send_message(chat_id, text)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        self.user_states[user_id]["step"] = "waiting_text"

    def update_user_compression_level(self, user_id: int, compression_level: int, username: str = ""):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Å–∂–∞—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            logger.info(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Å–∂–∞—Ç–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {compression_level}%")
            self.db.update_compression_level(user_id, compression_level, username)
            logger.info(f"–£—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω: {compression_level}%")
        except (sqlite3.Error, ValueError) as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Å–∂–∞—Ç–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            raise

    async def clear_custom_keyboards(self, chat_id: int):
        """–û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
        import json
        import asyncio

        try:
            url = f"{self.base_url}/sendMessage"
            data = {
                "chat_id": chat_id,
                "text": "üîÑ –û–±–Ω–æ–≤–ª—è—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å...",
                "reply_markup": json.dumps({"remove_keyboard": True})
            }

            async with self.session.post(url, data=data) as response:
                result = await response.json()
                if result.get("ok"):
                    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ—Å–ª–µ –∫–æ—Ä–æ—Ç–∫–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
                    message_id = result["result"]["message_id"]
                    await asyncio.sleep(1)
                    await self.delete_message(chat_id, message_id)
                    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –æ—á–∏—â–µ–Ω—ã –¥–ª—è —á–∞—Ç–∞ {chat_id}")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä: {e}")

    async def delete_message(self, chat_id: int, message_id: int):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            url = f"{self.base_url}/deleteMessage"
            data = {
                "chat_id": chat_id,
                "message_id": message_id
            }

            async with self.session.post(url, json=data) as response:
                result = await response.json()
                return result.get("ok", False)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return False

    def get_compression_keyboard(self, current_level: int = None, message_id: int = None) -> dict:
        """–°–æ–∑–¥–∞–Ω–∏–µ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è —Å–∂–∞—Ç–∏—è"""
        suffix = f"_{message_id}" if message_id else ""

        buttons = [
            [
                {"text": "üî• –ö—Ä–∞—Ç–∫–æ" + (" ‚úì" if current_level == 10 else ""), "callback_data": f"compression_10{suffix}"},
                {"text": "üìä –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ" + (" ‚úì" if current_level == 30 else ""), "callback_data": f"compression_30{suffix}"},
                {"text": "üìñ –ü–æ–¥—Ä–æ–±–Ω–æ" + (" ‚úì" if current_level == 60 else ""), "callback_data": f"compression_60{suffix}"}
            ]
        ]
        return {"inline_keyboard": buttons}
