#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π entry point –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è - –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É $file variable
"""
import threading
import os
import sys
import logging
from flask import Flask, jsonify

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[logging.StreamHandler(sys.stdout)]
)
logger = logging.getLogger(__name__)

# HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è health check
app = Flask(__name__)

@app.route('/')
@app.route('/health')
@app.route('/ready')
@app.route('/healthz')
def health_check():
    """Health check endpoint –¥–ª—è Cloud Run"""
    return jsonify({
        "status": "ok", 
        "message": "Telegram Summarization Bot - Cloud Run Ready",
        "service": "telegram-bot",
        "ready": True,
        "health": "healthy"
    }), 200

@app.route('/status')
def status():
    """–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞"""
    return jsonify({
        "status": "running",
        "service": "telegram-summarization-bot",
        "features": [
            "AI text summarization",
            "Multi-language support", 
            "Groq API integration",
            "Fallback summarization"
        ]
    }), 200

def run_telegram_bot():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        from simple_bot import SimpleTelegramBot
        bot = SimpleTelegramBot()
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –±–ª–æ–∫–∏—Ä—É—é—â–µ–º —Ä–µ–∂–∏–º–µ
        import asyncio
        asyncio.run(bot.run())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞: {e}")
        sys.exit(1)

if __name__ == '__main__':
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ entry point")
    logger.info(f"Python: {sys.version}")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞
    port = int(os.environ.get('PORT', 5000))
    logger.info(f"–ü–æ—Ä—Ç: {port}")
    
    try:
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ –¥–ª—è Telegram –±–æ—Ç–∞...")
        bot_thread = threading.Thread(target=run_telegram_bot, daemon=True)
        bot_thread.start()
        logger.info("–ü–æ—Ç–æ–∫ Telegram –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω")
        
        # –ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        logger.info(f"HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ 0.0.0.0:{port}")
        app.run(host='0.0.0.0', port=port, debug=False)
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)