# Задача: Добавить функцию настраиваемой суммаризации текста в существующий Telegram бот

## Что нужно сделать

Проанализируй существующий код Telegram бота в этом репозитории и **АККУРАТНО** добавь новую функциональность суммаризации текста, **НЕ НАРУШАЯ** работу уже существующих команд и логики.

## Требования к новой функциональности

### Пользовательский сценарий:
1. Пользователь вызывает команду для суммаризации (например `/summarize` или кнопку в меню)
2. Боту нужно предложить выбрать **коэффициент сжатия**: 10%, 30% или 50% от исходного размера
3. Затем предложить выбрать **формат результата**:
   - Маркированный список (ключевые пункты)
   - Связный абзац (краткое изложение)
   - Ключевые слова (список важных терминов)
4. После настроек попросить пользователя отправить текст для суммаризации **любым из способов**:
   - Написать или вставить текст напрямую в чат с ботом
   - Переслать сообщение(я) из любого Telegram чата или канала
   - Переслать несколько сообщений - бот должен их объединить в один текст для суммаризации
5. Обработать полученный текст и выдать результат в выбранном формате и с нужным уровнем сжатия
6. Предложить сделать новую суммаризацию или изменить настройки

### Ограничения и валидация:
- Минимальный размер текста: 100 символов
- Максимальный размер: разумный лимит (например, 10000 символов)
- **Обработка пересланных сообщений**:
  - Извлекать текст из пересланных сообщений (forwarded messages)
  - Если переслано несколько сообщений подряд - объединять их в один текст
  - Игнорировать медиа файлы, обрабатывать только текстовое содержимое
  - Сохранять хронологический порядок сообщений при объединении
  - Показывать пользователю сколько символов получилось после объединения
- Показывать понятные сообщения об ошибках
- Обрабатывать случаи когда пользователь отправляет что-то неподходящее (только медиа без текста, пустые сообщения)

### Качество суммаризации:
- Результат должен действительно соответствовать выбранному проценту сжатия
- Сохранять основные мысли и важную информацию из исходного текста
- Работать с русским и английским языками
- Результат должен быть читаемым и связным

## Как интегрировать:

1. **СНАЧАЛА изучи весь существующий код** - посмотри архитектуру, стиль кодирования, как организованы команды, обработчики, клавиатуры
2. **Следуй существующим паттернам** - используй тот же стиль написания кода, структуру файлов, способы обработки команд
3. **Не ломай существующую логику** - добавляй новые функции так, чтобы старые команды продолжали работать
4. **Интегрируйся с существующим меню** - если есть главное меню или система навигации, добавь туда новую опцию
5. **Используй те же библиотеки** - проверь requirements.txt и используй уже подключенные зависимости, добавляй новые только при необходимости

## Технические детали для реализации:

- Для суммаризации можешь использовать OpenAI API, Hugging Face модели или другие доступные решения
- Сделай код модульным - вынеси логику суммаризации в отдельные функции
- **Обработка пересланных сообщений**:
  - Научи бота распознавать forwarded messages через Telegram Bot API
  - Создай функцию для извлечения текста из пересланных сообщений
  - Обработай случаи когда сообщение содержит и текст и медиа
  - Реализуй логику объединения нескольких пересланных сообщений в один текст
  - Добавь возможность принимать как обычные текстовые сообщения, так и forwarded
- Добавь обработку ошибок для API вызовов и сетевых проблем
- Сохраняй выбранные пользователем настройки на время сессии
- Показывай индикатор загрузки во время обработки текста
- Информируй пользователя о том какие типы контента принимает бот (текст, пересланные сообщения)

## Важные моменты:

⚠️ **КРИТИЧЕСКИ ВАЖНО**: Не меняй и не удаляй существующий код без крайней необходимости
⚠️ **Тестируй**: После добавления убедись что все старые команды работают как раньше
⚠️ **Следуй стилю**: Пиши код в том же стиле что и существующий проект

## Результат:

После выполнения задачи у пользователя должна появиться новая функция суммаризации с гибкими настройками, которая органично вписывается в существующего бота и не нарушает его работу.

Начни с анализа кода и покажи план интеграции, прежде чем вносить изменения.