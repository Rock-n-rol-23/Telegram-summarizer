–¶–µ–ª—å.

–£–±—Ä–∞—Ç—å ImportError: cannot import name 'is_audio_document' from 'utils.tg_audio'.

–û–±–µ—Å–ø–µ—á–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—É—Ç–∏–Ω–≥: –µ—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ document –∏ —ç—Ç–æ –Ω–µ –∞—É–¥–∏–æ, —Ç–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ handle_document_message (PDF, —Å–∫–∞–Ω—ã, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ .pptx, DOC/DOCX/TXT, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è OCR).

–ù–µ –ª–æ–º–∞—Ç—å —Ç–µ–∫—É—â—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∞—É–¥–∏–æ (voice, audio, video_note) –∏ –∞—É–¥–∏–æ-—Ñ–∞–π–ª–æ–≤ –≤ document.

–ö–æ–Ω—Ç–µ–∫—Å—Ç/—Ñ–∞–∫—Ç—ã.

–û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –≤ simple_bot.py –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ is_audio_document –∏–∑ utils.tg_audio.

–í –ø—Ä–æ–µ–∫—Ç–µ –µ—Å—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: file_processor.py (pdfplumber/PyPDF2 + PyMuPDF + OCR —á–µ—Ä–µ–∑ Tesseract –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏), –∞ —Ç–∞–∫–∂–µ content_extraction/pdf_ocr.py –∏ content_extraction/pptx_extractor.py.

–í pyproject.toml –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (pymupdf, pdfplumber, python-pptx, pytesseract, Pillow) —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.

–ù–∞–¥–æ –ø—Ä–æ—Å—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–ª–∏—á–∞—Ç—å –∞—É–¥–∏–æ-–¥–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç –æ–±—ã—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–µ —É–≤–æ–¥–∏—Ç—å PDF –≤ –∞—É–¥–∏–æ-–ø–∞–π–ø–ª–∞–π–Ω.

–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ —Ñ–∞–π–ª–∞–º
1) utils/tg_audio.py ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–µ–∫—Ç–æ—Ä –∞—É–¥–∏–æ-–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

–í –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ –¥–æ–±–∞–≤—å —Ñ—É–Ω–∫—Ü–∏—é is_audio_document:

# utils/tg_audio.py

from typing import Dict

def is_audio_document(doc: Dict) -> bool:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ telegram 'document' –∞—É–¥–∏–æ-—Ñ–∞–π–ª–æ–º.
    –°–º–æ—Ç—Ä–∏–º –Ω–∞ mime_type –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True —Ç–æ–ª—å–∫–æ –¥–ª—è –∞—É–¥–∏–æ; –∏–Ω–∞—á–µ False.
    """
    try:
        mime = (doc.get("mime_type") or "").lower()
        name = (doc.get("file_name") or "").lower()

        # –Ø–≤–Ω—ã–µ –∑–≤—É–∫–∏ –ø–æ MIME
        if mime.startswith("audio/"):
            return True

        # –¢–µ–ª–µ–≥—Ä–∞–º –∏–Ω–æ–≥–¥–∞ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç audio –∫–∞–∫ application/octet-stream
        audio_exts = {
            ".mp3", ".m4a", ".aac", ".flac", ".wav",
            ".ogg", ".oga", ".opus", ".amr", ".wma", ".mka"
        }
        if name and any(name.endswith(ext) for ext in audio_exts):
            return True

        return False
    except Exception:
        # –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ–º—Å—è ‚Äî —Å—á–∏—Ç–∞–µ–º –ù–ï –∞—É–¥–∏–æ, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        return False


–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∏–º–ø–æ—Ä—Ç Dict —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –≤—ã—à–µ; –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –æ—Å—Ç–∞–≤—å, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ.

2) simple_bot.py ‚Äî –ø—Ä–∏–≤–µ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç—ã –∫ –µ–¥–∏–Ω–æ–º—É –≤–∏–¥—É –∏ –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å

–ù–∞–π–¥–∏ –±–ª–æ–∫ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏–∑ utils.tg_audio –∏ –∑–∞–º–µ–Ω–∏ –Ω–∞ –µ–¥–∏–Ω—ã–π:

# simple_bot.py (–≤–≤–µ—Ä—Ö—É —Ñ–∞–π–ª–∞, —Ä—è–¥–æ–º —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏)
from utils.tg_audio import (
    extract_audio_descriptor,
    get_audio_info_text,
    format_duration,
    is_audio_document,
)


–î–∞–ª–µ–µ, —É–¥–∞–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–æ–≤ –Ω–∞–ø–æ–¥–æ–±–∏–µ:

# –£–î–ê–õ–ò–¢–¨ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤–Ω—É—Ç—Ä–∏ handle_update:
from utils.tg_audio import is_audio_document


–∏ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã format_duration. –í –∫–æ–¥–µ –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑—É–π —É–∂–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–≤–µ—Ä—Ö—É —Å–∏–º–≤–æ–ª—ã.

3) –õ–æ–≥–∏–∫–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å, –Ω–æ –Ω–µ–º–Ω–æ–≥–æ —É—Å–∏–ª–∏—Ç—å –ª–æ–≥–∏

–í –º–µ—Å—Ç–µ, –≥–¥–µ —Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å elif "document" in message:, –¥–æ–±–∞–≤—å –∫–æ—Ä–æ—Ç–∫–∏–π –ª–æ–≥, —á—Ç–æ–±—ã –±—ã–ª–æ –≤–∏–¥–Ω–æ —Ä–µ—à–µ–Ω–∏–µ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞:

# simple_bot.py (–≤–Ω—É—Ç—Ä–∏ handle_update, –≤ –≤–µ—Ç–∫–µ elif "document" in message:)
doc = message["document"]
is_audio = is_audio_document(doc)
logger.info(f"DEBUG: document '{doc.get('file_name')}' mime='{doc.get('mime_type')}' -> is_audio={is_audio}")

if is_audio:
    if ("forward_from" in message) or ("forward_from_chat" in message) or ("forward_origin" in message):
        logger.info("–ü–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–π –∞—É–¥–∏–æ –¥–æ–∫—É–º–µ–Ω—Ç –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ ‚Äî –Ω–∞–ø—Ä–∞–≤–ª—è—é –≤ handle_audio_message")
    await self.handle_audio_message(update)
else:
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (PDF, DOCX, DOC, TXT, PPTX; —Å–∫–∞–Ω—ã —á–µ—Ä–µ–∑ OCR)
    await self.handle_document_message(update)
return


–≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –ª–æ–≥–∞ –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ –ø–æ–Ω—è—Ç—å, –ø–æ—á–µ–º—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª –ø–æ—à—ë–ª –≤ –∞—É–¥–∏–æ –∏–ª–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç—ã.

4) (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –†–∞—Å—à–∏—Ä–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤—Ö–æ–¥—è—â–∏—Ö ¬´–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤¬ª-–∫–∞—Ä—Ç–∏–Ω–æ–∫ –ø–æ–¥ OCR

–ï—Å–ª–∏ –µ—â—ë –Ω–µ —Å–¥–µ–ª–∞–Ω–æ, –≤ file_processor.FileProcessor.__init__ –æ—Å—Ç–∞–≤—å/–ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –ø—Ä–∏ HAS_ENHANCED_PDF_SUPPORT –≤–∫–ª—é—á–µ–Ω—ã OCR –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:

# file_processor.py (—É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –ø–æ–¥–æ–±–Ω—ã–π –∫–æ–¥ ‚Äî –ø—Ä–æ—Å—Ç–æ —É–±–µ–¥–∏—Å—å)
base_formats = ['.pdf', '.docx', '.doc', '.txt']
if HAS_PPTX_SUPPORT:
    base_formats.append('.pptx')
if HAS_ENHANCED_PDF_SUPPORT:
    base_formats.extend(['.png', '.jpg', '.jpeg'])  # OCR –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
self.supported_extensions = base_formats


–≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–∫–∞–Ω—ã, –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–µ –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–æ—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã), —á–µ—Ä–µ–∑ extract_text_from_image() ‚Üí pytesseract.

–ü—Ä–æ–≤–µ—Ä–∫–∏ (acceptance criteria)

–†–µ–≥—Ä–µ—Å—Å-—Ñ–µ–π–ª —É—Å—Ç—Ä–∞–Ω—ë–Ω.
–ü—Ä–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–º PDF (–ø—Ä–∏–º–µ—Ä –∏–∑ –ª–æ–≥–∞: Scrum-Guide-RUS.pdf) –±–æ—Ç –Ω–µ –ø–∞–¥–∞–µ—Ç –Ω–∞ –∏–º–ø–æ—Ä—Ç–µ –∏ –Ω–µ —É—Ö–æ–¥–∏—Ç –≤ –∞—É–¥–∏–æ-–≤–µ—Ç–∫—É, –∞ –≤—ã–∑—ã–≤–∞–µ—Ç handle_document_message.
–í –ª–æ–≥–µ –≤–∏–¥–Ω–æ:

DEBUG: document 'Scrum-Guide-RUS.pdf' mime='application/pdf' -> is_audio=False

üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–æ–∫—É–º–µ–Ω—Ç: Scrum-Guide-RUS.pdf ‚Ä¶

–î–∞–ª—å—à–µ ‚Äî —à–∞–≥–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ (pdfplumber/PyMuPDF/OCR), –∫–∞–∫ –≤ —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.

–ê—É–¥–∏–æ-—Ñ–∞–π–ª—ã –∫–∞–∫ document (–Ω–∞–ø—Ä–∏–º–µ—Ä, voice.m4a, recording.mp3, audio.ogg) –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Ö–æ–¥—è—Ç –≤ handle_audio_message, –¥–∞–∂–µ –µ—Å–ª–∏ mime_type = application/octet-stream, –±–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é.

–ü–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ –∏ ¬´–∏–∑ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞¬ª –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ: PDF (—Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∏ —Å–∫–∞–Ω—ã), .pptx –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏, DOC/DOCX/TXT –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (.png/.jpg/.jpeg) —Å OCR.

–ù–∏—á–µ–≥–æ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –Ω–µ —Å–ª–æ–º–∞–Ω–æ: –æ–±—Ä–∞–±–æ—Ç–∫–∞ voice, audio, video_note —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –ø—Ä–µ–∂–¥–µ.

–ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –æ–∫—Ä—É–∂–µ–Ω–∏—é (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–¥–∞)

–î–ª—è –ª—É—á—à–µ–≥–æ OCR –ø—Ä–æ–≤–µ—Ä—å –Ω–∞–ª–∏—á–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ Tesseract –∏ —è–∑—ã–∫–æ–≤:

Debian/Ubuntu: tesseract-ocr, tesseract-ocr-rus, tesseract-ocr-eng.

–ù–∞ Railway/Nixpacks –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ–∏–≥ —Å–±–æ—Ä–∫–∏.

–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ–¥:

OCR_LANGS (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "rus+eng")

PDF_OCR_DPI (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 200)

MAX_PAGES_OCR (–Ω–∞–ø—Ä–∏–º–µ—Ä, 50)

–ë—ã—Å—Ç—Ä—ã–π —Å–∞–º–æ—Ç–µ—Å—Ç is_audio_document

–î–æ–±–∞–≤—å –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç, —á—Ç–æ–±—ã –Ω–µ —Ä–µ–≥—Ä–µ—Å—Å–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É–¥—É—â–µ–º:

# tests/test_tg_audio.py
from utils.tg_audio import is_audio_document

def test_is_audio_document():
    assert is_audio_document({"mime_type": "audio/mpeg", "file_name": "a.mp3"})
    assert is_audio_document({"mime_type": "application/octet-stream", "file_name": "a.ogg"})
    assert not is_audio_document({"mime_type": "application/pdf", "file_name": "doc.pdf"})
    assert not is_audio_document({"mime_type": "application/vnd.openxmlformats-officedocument.presentationml.presentation", "file_name": "slides.pptx"})
    assert not is_audio_document({"mime_type": "", "file_name": "report.pdf"})
