# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π Telegram –±–æ—Ç

## –ó–∞–¥–∞—á–∞
–î–æ–±–∞–≤–∏—Ç—å –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π Telegram –±–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ —Å—Å—ã–ª–∫–∞–º, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.

## 1. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

–î–æ–±–∞–≤—å –≤ requirements.txt —Å–ª–µ–¥—É—é—â–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:
```
requests>=2.31.0
beautifulsoup4>=4.12.0
lxml>=4.9.0
validators>=0.22.0
openai>=1.0.0
python-readability>=0.8.0
```

## 2. –û—Å–Ω–æ–≤–Ω–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã

### –®–∞–≥ 1: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
```python
import re
import validators

def extract_urls_from_message(text):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ URL –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ URL
    url_pattern = r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+'
    urls = re.findall(url_pattern, text)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ URL
    valid_urls = []
    for url in urls:
        if validators.url(url):
            valid_urls.append(url)
    
    return valid_urls
```

### –®–∞–≥ 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
```python
import requests
from bs4 import BeautifulSoup
from readability import Document

def extract_webpage_content(url, timeout=30):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    try:
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        response = requests.get(url, headers=headers, timeout=timeout)
        response.raise_for_status()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–º–∞–∫—Å–∏–º—É–º 5MB)
        if len(response.content) > 5 * 1024 * 1024:
            raise Exception("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é readability
        doc = Document(response.content)
        main_content = doc.summary()
        
        # –û—á–∏—Å—Ç–∫–∞ –æ—Ç HTML —Ç–µ–≥–æ–≤
        soup = BeautifulSoup(main_content, 'lxml')
        
        # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        for element in soup(['script', 'style', 'nav', 'header', 'footer', 'aside']):
            element.decompose()
        
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        text = soup.get_text()
        
        # –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
        lines = (line.strip() for line in text.splitlines())
        chunks = (phrase.strip() for line in lines for phrase in line.split("  "))
        text = ' '.join(chunk for chunk in chunks if chunk)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        title = doc.title() or "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"
        
        return {
            'title': title,
            'content': text,
            'url': url,
            'success': True
        }
        
    except requests.exceptions.Timeout:
        return {'success': False, 'error': '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ'}
    except requests.exceptions.ConnectionError:
        return {'success': False, 'error': '–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–∞–π—Ç—É'}
    except requests.exceptions.HTTPError as e:
        return {'success': False, 'error': f'–û—à–∏–±–∫–∞ HTTP: {e.response.status_code}'}
    except Exception as e:
        return {'success': False, 'error': f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {str(e)}'}
```

### –®–∞–≥ 3: –°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ OpenAI API
```python
import openai
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI
openai.api_key = os.getenv('OPENAI_API_KEY')

def summarize_text(text, title="", max_length=500):
    """–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É—è OpenAI GPT"""
    try:
        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –≤—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (–ø—Ä–∏–º–µ—Ä–Ω–æ 3000 —Ç–æ–∫–µ–Ω–æ–≤)
        if len(text) > 12000:
            text = text[:12000] + "..."
        
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ prompt –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏
        prompt = f"""
–°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
–†–µ–∑—é–º–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:
- –ù–µ –±–æ–ª—å—à–µ {max_length} —Å–∏–º–≤–æ–ª–æ–≤
- –°–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–¥–µ–∏ –∏ –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã
- –ë—ã—Ç—å –ø–æ–Ω—è—Ç–Ω—ã–º –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º

–ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}

–¢–µ–∫—Å—Ç –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏:
{text}

–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ:"""

        response = openai.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫—Ä–∞—Ç–∫–∏–µ —Ä–µ–∑—é–º–µ —Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=200,
            temperature=0.3
        )
        
        summary = response.choices[0].message.content.strip()
        
        return {
            'summary': summary,
            'success': True
        }
        
    except Exception as e:
        return {
            'success': False,
            'error': f'–û—à–∏–±–∫–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏: {str(e)}'
        }
```

### –®–∞–≥ 4: Fallback —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –±–µ–∑ AI
```python
def simple_text_summary(text, max_sentences=3):
    """–ü—Ä–æ—Å—Ç–∞—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –±–µ–∑ AI - –±–µ—Ä–µ—Ç –ø–µ—Ä–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"""
    import re
    
    # –†–∞–∑–±–∏–≤–∫–∞ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    sentences = re.split(r'[.!?]+', text)
    sentences = [s.strip() for s in sentences if len(s.strip()) > 20]
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    summary_sentences = sentences[:max_sentences]
    summary = '. '.join(summary_sentences)
    
    if len(summary) > 500:
        summary = summary[:500] + "..."
    
    return summary
```

## 3. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º –±–æ—Ç–æ–º

### –î–æ–±–∞–≤—å –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π:
```python
async def handle_url_message(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å URL –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
    message_text = update.message.text
    chat_id = update.message.chat_id
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    urls = extract_urls_from_message(message_text)
    
    if not urls:
        return  # –ï—Å–ª–∏ URL –Ω–µ—Ç, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_msg = await context.bot.send_message(
        chat_id=chat_id,
        text="üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥."
    )
    
    for url in urls[:3]:  # –ú–∞–∫—Å–∏–º—É–º 3 URL –∑–∞ —Ä–∞–∑
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
            content_result = extract_webpage_content(url)
            
            if not content_result['success']:
                await context.bot.send_message(
                    chat_id=chat_id,
                    text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {url}:\n{content_result['error']}"
                )
                continue
            
            # –°—É–º–º–∞—Ä–∏–∑–∏—Ä—É–µ–º
            summary_result = summarize_text(
                content_result['content'], 
                content_result['title']
            )
            
            if summary_result['success']:
                summary_text = summary_result['summary']
            else:
                # Fallback –Ω–∞ –ø—Ä–æ—Å—Ç—É—é —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—é
                summary_text = simple_text_summary(content_result['content'])
                summary_text += "\n\n‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç–≤–µ—Ç
            response = f"""üìÑ **–†–µ–∑—é–º–µ —Å—Ç–∞—Ç—å–∏**

üîó **–ò—Å—Ç–æ—á–Ω–∏–∫:** {content_result['title']}
üìé **–°—Å—ã–ª–∫–∞:** {url}

üìù **–û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:**
{summary_text}

üìä **–†–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞:** {len(content_result['content']):,} —Å–∏–º–≤–æ–ª–æ–≤"""

            await context.bot.send_message(
                chat_id=chat_id,
                text=response,
                parse_mode='Markdown',
                disable_web_page_preview=True
            )
            
        except Exception as e:
            await context.bot.send_message(
                chat_id=chat_id,
                text=f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {url}: {str(e)}"
            )
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    try:
        await context.bot.delete_message(chat_id=chat_id, message_id=processing_msg.message_id)
    except:
        pass
```

### –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞:
```python
# –í –≥–ª–∞–≤–Ω–æ–º —Ñ–∞–π–ª–µ –±–æ—Ç–∞, –≥–¥–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
from telegram.ext import MessageHandler, filters

# –î–æ–±–∞–≤—å —ç—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º
application.add_handler(MessageHandler(
    filters.TEXT & filters.Regex(r'http[s]?://'),
    handle_url_message
))
```

## 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

–î–æ–±–∞–≤—å –≤ —Ñ–∞–π–ª .env (–∏–ª–∏ –≤ Secrets –≤ Replit):
```
OPENAI_API_KEY=your_openai_api_key_here
```

## 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π

### –î–æ–±–∞–≤—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
```python
def is_url_allowed(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ URL –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    blocked_domains = [
        'facebook.com', 'instagram.com', 'twitter.com', 
        'youtube.com', 'tiktok.com'  # –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ —Å–ª–æ–∂–Ω–æ –ø–∞—Ä—Å–∏—Ç—å
    ]
    
    from urllib.parse import urlparse
    domain = urlparse(url).netloc.lower()
    
    for blocked in blocked_domains:
        if blocked in domain:
            return False
    return True

def rate_limit_check(user_id, max_requests_per_hour=10):
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)"""
    # –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∫—ç—à
    # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True
    return True
```

## 6. –£–ª—É—á—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞

### –î–æ–±–∞–≤—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏:
```python
async def help_summarize_command(update, context):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏ –ø–æ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
    help_text = """
üìÑ **–°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü**

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é, –Ω–æ–≤–æ—Å—Ç—å –∏–ª–∏ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É, –∏ —è —Å–æ–∑–¥–∞–º –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è.

**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:**
‚úÖ –ù–æ–≤–æ—Å—Ç–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª—ã
‚úÖ –ë–ª–æ–≥–∏ –∏ —Å—Ç–∞—Ç—å–∏
‚úÖ –ù–∞—É—á–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

**–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 3 —Å—Å—ã–ª–∫–∏ –∑–∞ —Ä–∞–∑
‚Ä¢ –°—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ 5MB
‚Ä¢ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∞–π—Ç—ã –º–æ–≥—É—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–æ—Å—Ç—É–ø

**–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
–û—Ç–ø—Ä–∞–≤—å—Ç–µ: https://habr.com/ru/articles/123456/
–ü–æ–ª—É—á–∏—Ç–µ: –ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —Å—Ç–∞—Ç—å–∏ —Å –∫–ª—é—á–µ–≤—ã–º–∏ –º–æ–º–µ–Ω—Ç–∞–º–∏
"""
    
    await update.message.reply_text(help_text, parse_mode='Markdown')

# –î–æ–±–∞–≤—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã
application.add_handler(CommandHandler("summarize_help", help_summarize_command))
```

## 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏

### –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ —Å–∞–π—Ç–æ–≤:
1. **–ù–æ–≤–æ—Å—Ç–Ω—ã–µ —Å–∞–π—Ç—ã**: –†–ë–ö, –ò–Ω—Ç–µ—Ä—Ñ–∞–∫—Å, –ú–µ–¥—É–∑–∞
2. **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –±–ª–æ–≥–∏**: –•–∞–±—Ä, VC.ru
3. **–ù–∞—É—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏**: ArXiv, –∂—É—Ä–Ω–∞–ª—ã
4. **–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∞–π—Ç—ã**: —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –±–æ—Ç–æ–≤

### –ü—Ä–æ–≤–µ—Ä—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫:
- –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∞–π—Ç—ã (404 –æ—à–∏–±–∫–∏)
- –ú–µ–¥–ª–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã (timeout)
- –°–∞–π—Ç—ã —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –±–æ—Ç–æ–≤
- –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ URL

---

**–í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:**
1. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤—å API –∫–ª—é—á OpenAI –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
2. –¢–µ—Å—Ç–∏—Ä—É–π –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
3. –°–ª–µ–¥–∏ –∑–∞ –ª–∏–º–∏—Ç–∞–º–∏ API OpenAI
4. –î–æ–±–∞–≤—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
5. –†–∞—Å—Å–º–æ—Ç—Ä–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π