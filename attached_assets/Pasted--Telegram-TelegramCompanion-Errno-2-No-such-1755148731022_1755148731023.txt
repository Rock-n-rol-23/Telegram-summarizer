–ö–æ–Ω—Ç–µ–∫—Å—Ç: —É –º–µ–Ω—è Telegram –±–æ—Ç –≤ –ø–∞–ø–∫–µ TelegramCompanion. –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ: Errno 2 No such file or directory: 'ffmpeg'. –ù–∞–¥–æ –ø–æ—á–∏–Ω–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é/—ç–∫—Å–ø–æ—Ä—Ç –∞—É–¥–∏–æ –∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é.

–°–¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:

1) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å pydub –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ ffmpeg –æ—Ç imageio-ffmpeg

–§–∞–π–ª: TelegramCompanion/audio_processor.py
–ü—Ä–∞–≤–∫–∏:

–°—Ä–∞–∑—É –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–æ–±–∞–≤—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é ffmpeg –¥–ª—è pydub:

# --- ADD: make pydub use bundled ffmpeg ---
from utils.ffmpeg import ensure_ffmpeg
FFMPEG_BIN = ensure_ffmpeg()

# –ü—Ä–æ–±—Ä–æ—Å –¥–ª—è pydub
from pydub import AudioSegment
AudioSegment.converter = FFMPEG_BIN
AudioSegment.ffmpeg = FFMPEG_BIN
AudioSegment.ffprobe = FFMPEG_BIN  # –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ pydub –∑–∞—Ö–æ—á–µ—Ç ffprobe

# –ß—Ç–æ–±—ã subprocess/–¥—Ä—É–≥–∏–µ –ª–∏–±—ã –Ω–∞—Ö–æ–¥–∏–ª–∏ –±–∏–Ω–∞—Ä—å
import os
os.environ["FFMPEG_BINARY"] = FFMPEG_BIN
os.environ["PATH"] = os.path.dirname(FFMPEG_BIN) + os.pathsep + os.environ.get("PATH", "")
# --- END ADD ---


–í –º–µ—Ç–æ–¥–µ _convert_to_wav16k_mono —É–±–µ–¥–∏c—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø—É—Ç—å:

def _convert_to_wav16k_mono(self, src_path: str, dst_path: str) -> Tuple[float, int]:
    ffmpeg = FFMPEG_BIN  # –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ 'ffmpeg'
    cmd = [ffmpeg, "-y", "-i", src_path, "-ac", "1", "-ar", "16000", "-vn", dst_path]
    subprocess.run(cmd, check=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    audio = AudioSegment.from_wav(dst_path)
    duration = len(audio) / 1000.0
    return duration, 16000


–í –º–µ—Ç–æ–¥–µ _split_wav –æ—Å—Ç–∞–≤–∏—Ç—å —ç–∫—Å–ø–æ—Ä—Ç –∫–∞–∫ –µ—Å—Ç—å ‚Äî —Ç–µ–ø–µ—Ä—å pydub –∑–Ω–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ ffmpeg.

–î–æ–±–∞–≤—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É—Ç–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ (–æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–∞ –∏–ª–∏ –º–æ–¥—É–ª—è):

import logging
logger = logging.getLogger(__name__)
logger.info(f"Using ffmpeg binary at: {FFMPEG_BIN}")

2) –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å—Ç—å

–§–∞–π–ª: TelegramCompanion/pyproject.toml
–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –≤ dependencies –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç:

pydub>=0.25.1

imageio-ffmpeg>=0.4.9

–ï—Å–ª–∏ –≤–µ—Ä—Å–∏–π –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤—å/–æ–±–Ω–æ–≤–∏. –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞.

3) –ü–æ—á–∏–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞ (Railway/Cloud Run)

–§–∞–π–ª: TelegramCompanion/Dockerfile
–ó–∞–º–µ–Ω–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –ø–∞–∫–µ—Ç–æ–≤ –Ω–∞ –≤–∞—Ä–∏–∞–Ω—Ç —Å ffmpeg (–∏ —É–±—Ä–∞—Ç—å –ª–∏—à–Ω–µ–µ):

FROM python:3.11-slim

WORKDIR /app

# –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg \
    build-essential \
    curl \
 && rm -rf /var/lib/apt/lists/*

# –ö–æ–ø–∏—Ä—É–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —Å—Ç–∞–≤–∏–º –ø–∞–∫–µ—Ç—ã
COPY pyproject.toml .
RUN pip install --upgrade pip && pip install --no-cache-dir .

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–¥
COPY . .

ENV PORT=5000
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV DEPLOYMENT_TYPE=cloudrun

CMD ["python", "main_entrypoint.py"]


–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í .replit —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å nix.packages = ["ffmpeg", "ffmpeg-full", ...] ‚Äî —ç—Ç–æ —Ö–æ—Ä–æ—à–æ –¥–ª—è dev. –ù–æ –ø—Ä–æ–¥-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤—Å—ë —Ä–∞–≤–Ω–æ –¥–æ–ª–∂–µ–Ω —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å ffmpeg, –ø–æ—ç—Ç–æ–º—É –¥–æ–±–∞–≤–∏–ª–∏ –≤ Dockerfile.

4) –ú–∏–Ω–∏-—Å–∞–º–æ—Ç–µ—Å—Ç –∞—É–¥–∏–æ (–ª–æ–∫–∞–ª—å–Ω–æ –≤ Replit)

–°–æ–∑–¥–∞–π —Ñ–∞–π–ª TelegramCompanion/dev_audio_selftest.py —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º:

import os, tempfile
from pydub import AudioSegment
from utils.ffmpeg import ensure_ffmpeg
from audio_processor import AudioProcessor
from groq import Groq

print("ffmpeg:", ensure_ffmpeg())
sine = AudioSegment.silent(duration=1500)  # 1.5 —Å–µ–∫ —Ç–∏—à–∏–Ω—ã
tmpdir = tempfile.mkdtemp()
src = os.path.join(tmpdir, "test.ogg")
wav = os.path.join(tmpdir, "test.wav")
sine.export(src, format="ogg")  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —ç–∫—Å–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ ffmpeg
print("OGG written:", os.path.exists(src))

ap = AudioProcessor(groq_client=Groq(api_key=os.getenv("GROQ_API_KEY", "dummy")))
duration, rate = ap._convert_to_wav16k_mono(src, wav)
print("WAV:", os.path.exists(wav), "duration:", duration, "rate:", rate)


–ó–∞–ø—É—Å—Ç–∏:

python TelegramCompanion/dev_audio_selftest.py


–û–∂–∏–¥–∞–µ–º —É–≤–∏–¥–µ—Ç—å –ø—É—Ç—å –∫ ffmpeg –∏ —É—Å–ø–µ—à–Ω—É—é –∑–∞–ø–∏—Å—å OGG/WAV.

5) –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

–í audio_processor.process_audio_from_telegram –≤ except –¥–æ–±–∞–≤—å –≤–µ—Ç–∫—É –¥–ª—è FileNotFoundError/subprocess.CalledProcessError —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π ¬´ffmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω/–Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è¬ª.

–í simple_bot.py –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∞—É–¥–∏–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´üéß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∞—É–¥–∏–æ‚Ä¶¬ª, –∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ ‚Äî ¬´‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ: <—Ç–µ–∫—Å—Ç>¬ª.

6) –î–µ–ø–ª–æ–π

–ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –∑–∞–¥–µ–ø–ª–æ–π (Railway/Cloud Run).

–ü—Ä–æ–≤–µ—Ä—å –æ–±—Ä–∞–±–æ—Ç–∫—É: voice (OGG/Opus), audio (MP3/M4A/WAV), document —Å –∞—É–¥–∏–æ ‚Äî –≤—Å–µ –¥–æ–ª–∂–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ 16k mono WAV, —Ä–∞–∑–±–∏–≤–∞—Ç—å—Å—è –Ω–∞ —á–∞–Ω–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ Groq Whisper.

–ö–æ–Ω–µ—Ü –ø—Ä–∞–≤–æ–∫. –ü—Ä–∏–º–µ–Ω—è–π, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∑–∞–ø—É—Å–∫–∞–π —Å–∞–º–æ—Ç–µ—Å—Ç, –∑–∞—Ç–µ–º –¥–µ–ø–ª–æ–π.