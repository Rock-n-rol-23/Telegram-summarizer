Добавить полноценную поддержку английского языка (EN) ко всем текущим функциям бота (текст/пересланные сообщения, веб-страницы, YouTube по субтитрам, документы, аудио→транскрипция→саммари), не ломая текущую работу на русском. Используем бесплатные библиотеки и экстрактивные методы, симметричные текущему RU-пайплайну. Локальная LLM — только как опциональный режим через флаг, по умолчанию выключен.

Контекст репо: использовать существующую архитектуру и точки входа (модули суммаризации/парсинга/бот-хендлеров менять минимально, интерфейсы не ломать).

1) Зависимости

Обнови/создай requirements.txt (не удаляя существующее), добавь:

lingua-language-detector==2.0.2 — точная офлайн-детекция RU/EN.

sumy==0.11.0 — экстрактивные суммаризаторы (LexRank/LSA).

(опционально, флагом — см. п.4) llama-cpp-python==0.3.2 — только как выключаемый режим.

Ничего из платного/внешнего для EN-суммаризации не подключаем.

2) Детекция языка

Создай utils/lang.py:

Функция detect_lang(text: str) -> Literal['ru','en'] на базе lingua.

Для очень коротких строк — fallback-эвристика (кириллица → ru, латиница → en).

Экспортируй is_ru(text), is_en(text).

Вызовы детекции вставить во все точки поступления текста:

прямой текст/пересланные сообщения,

извлечённый из файлов,

из веб-страниц/YouTube,

результат транскрипции аудио.

3) EN-суммаризация (экстрактивная, бесплатная)

Создай summarizers/english_sumy.py:

Реализуй summarize_en(text: str, max_sentences: int = 10) -> str.

Используй sumy.summarizers.lex_rank.LexRankSummarizer как основной, sumy.summarizers.lsa.LsaSummarizer как fallback.

Парсер: PlaintextParser.from_string(text, Tokenizer('english')).

Логика:

Если len(text) < N (например, < 600–800 символов), возвращай исходный текст или «мягкую выжимку» первых 2–3 информативных предложений (чтобы не «резать» слишком короткий вход).

Для длинных текстов: ограничь результат max_sentences, отформатируй списком • ....

Удали дубликаты предложений, нормализуй пробелы, сохрани ссылки/URL, если они есть.

Возвращай строку в английской локали (ничего не переводим).

4) (Опционально) Локальная LLM как выключаемый режим

В config.py добавь флаги:

USE_LOCAL_LLM=false
LOCAL_LLM_MODEL_PATH=
LOCAL_LLM_CTX=4096
LOCAL_LLM_THREADS=0


По умолчанию USE_LOCAL_LLM=false — ничего не меняется в производительности и требованиях.

Если когда-нибудь включим, создаём llm_local.py (обёртка над llama-cpp-python) и используем для обоих языков единый промпт с инструкцией «отвечай на языке входа». Пока не включаем и не скачиваем модели.

5) Роутер суммаризации

В существующем summarizer.py (или аналогичном центральном модуле):

Не ломая текущий RU-код (Natasha/экстрактив), добавь роутинг:

lang = detect_lang(text)
if lang == 'ru':
    return summarize_ru(text, max_sentences=MAX_OUT)   # существующий путь
else:
    return summarize_en(text, max_sentences=MAX_OUT)   # новый путь на sumy


Единообразно формируй вывод: буллеты •, 3–10 пунктов (зависит от длины входа), финальный блок «Ключевые факты/выводы» сохранять, если у тебя уже так делается на RU.

6) Интеграции: веб/YouTube/документы/аудио

Веб-страницы / YouTube / файлы: после извлечения текста вызывай общий summarize(text) — он сам определит язык и применит нужный маршрут.

Аудио: после транскрипции (любой текущий провайдер) прогоняй текст через общий роутер. Если транскрайбер умеет подсказать язык — используй его детекцию как «подсказку», но окончательное решение оставь за detect_lang().

7) /start и help

Обнови текст справки (без переименования команд):

Добавь фразу: «Бот автоматически определяет язык (RU/EN) и выдаёт саммари на языке исходного текста».

8) Тесты/смоки

Добавь tools/smoke_test_langs.py:

Кейсы:

RU-абзац (200–300 слов) → список •, ответ на русском, кол-во пунктов 3–10.

EN-абзац (200–300 слов) → список •, ответ на английском, 3–10 пунктов.

Краевые случаи:

Очень короткий текст EN (1–2 предложения) — не «искажать» смысл, вернуть короткую выжимку/оригинал.

Текст со ссылками — ссылки должны сохраниться в соответствующих пунктах.

Команда запуска:

python tools/smoke_test_langs.py

9) Критерии приёмки

Любой RU-вход → RU-саммари (текущий путь не изменился).

Любой EN-вход → EN-саммари через Sumy (LexRank/LSA), без вызова локальной LLM.

Веб/YouTube/документы/аудио — работают как раньше, без регрессий.

/start и help сообщают про автодетекцию RU/EN.

USE_LOCAL_LLM=false по умолчанию, никаких новых весов/скачиваний.

Вся используемая функциональность — бесплатная и офлайн.