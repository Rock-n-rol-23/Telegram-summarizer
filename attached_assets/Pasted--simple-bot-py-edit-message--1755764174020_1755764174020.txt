–ù–∞—à—ë–ª –∫–æ—Ä–Ω–µ–≤—É—é –ø—Ä–æ–±–ª–µ–º—É –≤ –∫–æ–¥–µ: —É —Ç–µ–±—è –≤ simple_bot.py –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –∏–º–µ–Ω–µ–º edit_message. –í—Ç–æ—Ä–∞—è (–Ω–∏–∂–µ –ø–æ —Ñ–∞–π–ª—É) –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–µ—Ä–≤—É—é –∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã reply_markup –∏ parse_mode.
–ö–æ–≥–¥–∞ —Ç—ã –∂–º—ë—à—å –ª—é–±—É—é inline-–∫–Ω–æ–ø–∫—É, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑—ã–≤–∞–µ—Ç safe_update_menu(...), –∫–æ—Ç–æ—Ä—ã–π –≤–Ω—É—Ç—Ä–∏ –≤—ã–∑—ã–≤–∞–µ—Ç edit_message(..., reply_markup=...). –ò–∑-–∑–∞ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–µ—Ç–∏—Ç TypeError: edit_message() got an unexpected keyword argument 'reply_markup', –∏ –±–æ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ ¬´‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞‚Ä¶¬ª. –í–∏–∑—É–∞–ª—å–Ω–æ —ç—Ç–æ –∏ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ ¬´loading¬ª –∏ ¬´–Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç¬ª.

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∑–∞–º–µ—Ç–∏–ª –µ—â—ë –º–µ–ª–æ—á—å: –≤ send_message –∏ edit_message*_ —Ç—ã –∏–Ω–æ–≥–¥–∞ —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ—à—å reply_markup —á–µ—Ä–µ–∑ json.dumps, –∞ –ø–æ—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å –≤–µ—Å—å –∑–∞–ø—Ä–æ—Å –∫–∞–∫ JSON (json=...). –õ–∏—à–Ω—è—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –∏ –∏–Ω–æ–≥–¥–∞ –¥–∞—ë—Ç —Å—Ç—Ä–∞–Ω–Ω–æ—Å—Ç–∏.

–Ω–∏–∂–µ ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É—Å—Ç—Ä–∞–Ω—è—Ç –±–∞–≥:

–ß—Ç–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å

–í simple_bot.py –æ—Å—Ç–∞–≤—å –æ–¥–Ω—É —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é edit_message (–Ω–∏–∂–µ ‚Äî –≥–æ—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è) –∏ —É–¥–∞–ª–∏/–ø–µ—Ä–µ–∏–º–µ–Ω—É–π –¥—É–±–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ (chat_id, message_id, text).

–í send_message –∏ edit_message_reply_markup –ø–µ—Ä–µ–¥–∞–≤–∞–π reply_markup –æ–±—ä–µ–∫—Ç–æ–º, –±–µ–∑ json.dumps, –µ—Å–ª–∏ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å json=payload.

–ì–æ—Ç–æ–≤—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –¥–ª—è –∑–∞–º–µ–Ω—ã

–ó–∞–º–µ–Ω–∏ –æ–±–µ —Ç–µ–∫—É—â–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ edit_message –æ–¥–Ω–æ–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π:

# simple_bot.py

async def edit_message(
    self,
    chat_id: int,
    message_id: int,
    text: str,
    reply_markup: dict | None = None,
    parse_mode: str | None = None,
    disable_web_page_preview: bool = True,
):
    """
    –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –£–º–µ–µ—Ç:
    - –∑–∞–¥–∞–≤–∞—Ç—å parse_mode (Markdown/HTML)
    - –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å inline/reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    - –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –ø–∞–¥–∞—Ç—å –Ω–∞ –æ—à–∏–±–∫–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    if not message_id:
        return

    url = f"{self.base_url}/editMessageText"

    def make_payload(pm: str | None):
        payload = {
            "chat_id": chat_id,
            "message_id": message_id,
            "text": text[:4096],
        }
        if pm:
            payload["parse_mode"] = pm
        if disable_web_page_preview:
            payload["disable_web_page_preview"] = True
        if reply_markup:
            payload["reply_markup"] = reply_markup  # –±–µ–∑ json.dumps
        return payload

    # 1) –µ—Å–ª–∏ parse_mode —è–≤–Ω–æ –∑–∞–¥–∞–Ω ‚Äî –ø—Ä–æ–±—É–µ–º —Å –Ω–∏–º; –∏–Ω–∞—á–µ –ø–æ–ø—Ä–æ–±—É–µ–º Markdown, –ø–æ—Ç–æ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    try_order = [parse_mode] if parse_mode else ["Markdown", None]

    async with aiohttp.ClientSession() as session:
        last_result = None
        for pm in try_order:
            payload = make_payload(pm)
            async with session.post(url, json=payload) as resp:
                raw = await resp.text()
                try:
                    result = json.loads(raw)
                except Exception:
                    logger.error(f"editMessageText non-JSON response: {raw}")
                    return None

                last_result = result
                # –ï—Å–ª–∏ ¬´can't parse entities¬ª ‚Äî –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–∂–∏–º
                if (not result.get("ok")) and ("can't parse entities" in result.get("description", "")):
                    logger.info("–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ editMessageText –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                    continue
                return result

        # –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å ‚Äî –≤–µ—Ä–Ω—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç
        if last_result and not last_result.get("ok"):
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {last_result}")
        return last_result


–ü–æ–ø—Ä–∞–≤—å send_message:

# simple_bot.py

async def send_message(self, chat_id: int, text: str, parse_mode: str | None = None, reply_markup: dict | None = None):
    url = f"{self.base_url}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": text[:4096],
    }
    if parse_mode:
        data["parse_mode"] = parse_mode
    if reply_markup:
        data["reply_markup"] = reply_markup  # –±–µ–∑ json.dumps

    logger.info(f"üì§ SEND_MESSAGE: chat_id={chat_id}, has_reply_markup={bool(reply_markup)}")
    async with aiohttp.ClientSession() as session:
        async with session.post(url, json=data) as response:
            result = await response.json()
            if result.get("ok"):
                logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
            else:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {result}")
            return result


–ü–æ–ø—Ä–∞–≤—å edit_message_reply_markup:

# simple_bot.py

async def edit_message_reply_markup(self, chat_id: int, message_id: int, reply_markup: dict):
    url = f"{self.base_url}/editMessageReplyMarkup"
    payload = {
        "chat_id": chat_id,
        "message_id": message_id,
        "reply_markup": reply_markup,  # –±–µ–∑ json.dumps
    }
    logger.info(f"EDIT_MESSAGE_REPLY_MARKUP: chat_id={chat_id}, message_id={message_id}")
    async with aiohttp.ClientSession() as session:
        async with session.post(url, json=payload) as response:
            result = await response.json()
            logger.info(f"editMessageReplyMarkup: {result}")
            return result

–ü–æ—á–µ–º—É —ç—Ç–æ —á–∏–Ω–∏—Ç ¬´loading¬ª –∏ ¬´–Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç¬ª

–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ inline-–∫–Ω–æ–ø–∫–∏ —Ç–µ–ø–µ—Ä—å safe_update_menu(...) –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã–∑–æ–≤–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é edit_message —Å reply_markup, –Ω–µ —É–ø–∞–¥—ë—Ç —Å TypeError, –∏ –º–µ–Ω—é/—Ç–µ–∫—Å—Ç –æ–±–Ω–æ–≤—è—Ç—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´‚úÖ –£—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è: 30%¬ª, ¬´‚úÖ –Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω‚Ä¶¬ª, —ç–∫—Ä–∞–Ω —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —Ç.–¥.).

–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–µ–∑ json.dumps –∏–∑–±–∞–≤–ª—è–µ—Ç –æ—Ç –¥–≤–æ–π–Ω–æ–π —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ json=..., —á—Ç–æ –¥–µ–ª–∞–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–µ–µ.

–ë—ã—Å—Ç—Ä—ã–π —á–µ–∫-–ª–∏—Å—Ç –ø–æ—Å–ª–µ –ø—Ä–∞–≤–æ–∫

–ù–∞–∂–º–∏ ¬´üìã –ú–µ–Ω—é¬ª (reply-–∫–Ω–æ–ø–∫–∞) ‚Äî –±–æ—Ç –ø—Ä–∏—à–ª—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏.

–ù–∞–∂–º–∏ ¬´üß† –£–º–Ω–∞—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è¬ª ‚Äî –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –Ω–µ—Ç, —É–≤–∏–¥–∏—à—å –≤ —ç—Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç-–ø–æ–¥—Å–∫–∞–∑–∫—É.

–ù–∞–∂–º–∏ ¬´–°–∂–∞—Ç–∏–µ 10%/30%/50%¬ª ‚Äî —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–∏—Ç—å—Å—è –Ω–∞ ¬´‚úÖ –£—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è: ‚Ä¶¬ª.

–ù–∞–∂–º–∏ ¬´üá∑üá∫/üá¨üáß –Ø–∑—ã–∫¬ª ‚Äî —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–∏—Ç—å—Å—è –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞.

–ù–∞–∂–º–∏ ¬´üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞¬ª ‚Äî –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —ç–∫—Ä–∞–Ω —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, ¬´–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é¬ª –≤–µ—Ä–Ω—ë—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.