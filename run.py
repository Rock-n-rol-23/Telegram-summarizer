#!/usr/bin/env python3
"""
Universal run.py entry point - —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –∏ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞
"""
import os
import sys
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    deployment_type = os.getenv('DEPLOYMENT_TYPE', 'cloudrun')
    
    # –ê–≤—Ç–æ-–¥–µ—Ç–µ–∫—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if os.getenv('K_SERVICE'):  # Google Cloud Run
        deployment_type = 'cloudrun'
    elif os.getenv('REPLIT_DEPLOYMENT'):  # Replit
        deployment_type = 'cloudrun' 
    
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ: {deployment_type}")
    
    if deployment_type == 'background':
        logger.info("–ò–º–ø–æ—Ä—Ç background_worker_optimized")
        from background_worker_optimized import main as worker_main
        import asyncio
        asyncio.run(worker_main())
        
    elif deployment_type == 'flask':
        logger.info("–ò–º–ø–æ—Ä—Ç app (Flask)")
        import app
        # Flask –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        
    else:  # cloudrun –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        logger.info("–ò–º–ø–æ—Ä—Ç cloudrun_optimized")
        from cloudrun_optimized import main as cloudrun_main
        import asyncio
        asyncio.run(cloudrun_main())

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        sys.exit(1)