#!/usr/bin/env python3
"""
main.py - –æ—Å–Ω–æ–≤–Ω–æ–π entry point —Å –∞–≤—Ç–æ-–¥–µ—Ç–µ–∫—Ü–∏–µ–π —Ä–µ–∂–∏–º–∞
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
"""
import os
import sys
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def main():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
    if os.getenv('DEPLOYMENT_TYPE') == 'background':
        deployment_mode = 'background'
    elif os.getenv('DEPLOYMENT_TYPE') == 'flask':
        deployment_mode = 'flask'
    elif os.getenv('K_SERVICE') or os.getenv('REPLIT_DEPLOYMENT'):
        deployment_mode = 'cloudrun'
    else:
        deployment_mode = 'cloudrun'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    logger.info(f"üöÄ –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞: {deployment_mode}")
    
    try:
        if deployment_mode == 'background':
            # Background Worker —Ä–µ–∂–∏–º
            logger.info("–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ Background Worker")
            from background_worker_optimized import main as bg_main
            import asyncio
            asyncio.run(bg_main())
            
        elif deployment_mode == 'flask':
            # Flask —Ä–µ–∂–∏–º
            logger.info("–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ Flask")
            import app
            # Flask app –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            
        else:
            # Cloud Run —Ä–µ–∂–∏–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
            logger.info("–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ Cloud Run")
            from cloudrun_optimized import main as cr_main
            import asyncio
            asyncio.run(cr_main())
            
    except ImportError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        logger.info("Fallback –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É deploy.py")
        import deploy
        # deploy.py —Å–æ–¥–µ—Ä–∂–∏—Ç fallback –ª–æ–≥–∏–∫—É
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()